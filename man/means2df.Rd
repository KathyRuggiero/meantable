% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/means2df.R
\name{means2df}
\alias{means2df}
\title{Converts a flat table of predicted means to a dataframe.}
\usage{
means2df(data, se = TRUE, digits)
}
\arguments{
\item{data}{a list in which the first element is a flat table (i.e. class \code{ftable}) of
predicted means and the second element is either \code{numeric} or \code{ftable} and contains the
standard error(s) of the means.}

\item{se}{logical (default \code{TRUE}), includes standard errors of means in dataframe.}

\item{digits}{integer indicating the number of decimal places (\code{round}) to be used.}
}
\value{
A dataframe comprising a column for each factor in the model term supplied to the
\code{modelterm} argument in the \link[predictmeans]{predictmeans} function, and columns for the model
predicted means and their standard errors.
}
\description{
This function converts the first two objects in the list generated by the \code{predictmeans()}
function into a dataframe. The first element of this list, \code{'Predict Means'}, containing
the model predicted means is of class \code{ftable}, while the second, \code{'Standard Error of
Means'}, is either of class \code{numeric}, e.g. equi-replicate designs in which the standard
error of the mean is common across all predicted means, or of class \code{ftable}, e.g. unbalanced
designs or weighted least squares analysis.
}
\details{
This function assumes that the list supplied to the \code{data} argument was generated
by the \link[predictmeans]{predictmeans} function in the \code{predictmeans} package.
}
\examples{
library(predictmeans)
data(fruitfly)
# fit model for factorial experiment with added control
newfruitfly <- toFactor(fruitfly, variables = c("ID", "Partners", "Type"))
newfruitfly$Control <- factor(ifelse(newfruitfly$Type==0, "Yes", "No"))
fruitfly.lm <- lm(Longevity ~ Control/(Partners*Type), data=newfruitfly)
fruitfly.pm <- predictmeans(fruitfly.lm, modelterm = "Control:Partners:Type", pairwise = TRUE,
plot = FALSE)
means2df(fruitfly.pm, digits=2)

# weighted least squares analysis of baseline inoculation concentration
data(bugs)
bugs$logBaseline <- log(bugs$Baseline + 1)
var.mat <- with(bugs, tapply(logBaseline, list(State, Bacteria), var))
var.df <- reshape::melt(var.mat)
names(var.df) <- c("State", "Bacteria", "Var")
newbugs <- merge(bugs, var.df)
newbugs$Weight <- 1/newbugs$Var
# WLS two-way anova
baselineBugs.lm <- lm(logBaseline ~ State*Bacteria, data = newbugs, weights = Weight)
# Predicted means
baselineBugs.pm <- predictmeans(baselineBugs.lm, modelterm = "State:Bacteria", pairwise=TRUE,
plot = FALSE)
means2df(baselineBugs.pm)
}
\author{
Katya Ruggiero
}
